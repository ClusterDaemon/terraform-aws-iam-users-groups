When adding the initial http data sources and external program to handle QR codes,

╷
│ Error: Invalid for_each argument
│
│   on ../main.tf line 121, in data "http" "keybase":
│  121:   for_each = {
│  122:     for name, attributes in local.users : name => attributes.pgp_public_key
│  123:     if length(regexall("^keybase:[a-z0-9]+$", attributes.pgp_public_key)) > 0
│  124:   }
│     ├────────────────
│     │ local.users is map of object with 3 elements
│
│ The "for_each" map includes keys derived from resource attributes that cannot be determined until apply, and so
│ Terraform cannot determine the full set of keys that will identify the instances of this resource.
╷
│ Error: Invalid for_each argument
│
│   on ../main.tf line 121, in data "http" "keybase":
│  121:   for_each = {
│  122:     for name, attributes in local.users : name => attributes.pgp_public_key
│  123:     if length(regexall("^keybase:[a-z0-9]+$", attributes.pgp_public_key)) > 0
│  124:   }
│     ├────────────────
│     │ local.users is map of object with 1 element
│
│ The "for_each" map includes keys derived from resource attributes that cannot be determined until apply, and so
│ Terraform cannot determine the full set of keys that will identify the instances of this resource.

The pair of errors above indicate a minimum and maximum amount of elements in the map after filtering. The test data for
var.users contains 3 elements, two of which contain keybase usernames for pgp_public_key.

The conditional on line 123 changes the amount of keys in data.http.keybase, and the amount is
unknown because we can't know if the content of the public key matches the regex filter.

This would not be an unusual pattern of usage for this resource module, so the issue is worth addressing within the
module. In order to get around this error, the value of the key/value pair containing the key must not be evaluated -
rather, whether the key has been set. This means that this conditional must be split into two keys.

These two keys must be optional within the users object schema, but at least one of them is required. This can be
enforced via validation rules, as the only structure the schema will require is an empty object for what will now be
keyed as `pgp`.
